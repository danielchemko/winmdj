package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.AssemblyProcessor
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubAssemblyProcessorImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : AssemblyProcessor {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.ASSEMBLY_PROCESSOR)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.ASSEMBLY_PROCESSOR, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubAssemblyProcessorImpl {
        return StubAssemblyProcessorImpl::class.constructors.first()
            .call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getProcessor(): kotlin.UInt {
        return stub.lookupTableValue(CLRMetadataType.ASSEMBLY_PROCESSOR, 0, kotlin.UInt::class)!!
    }
}