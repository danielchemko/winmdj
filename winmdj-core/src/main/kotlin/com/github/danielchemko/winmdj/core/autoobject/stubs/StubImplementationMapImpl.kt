package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.ImplementationMap
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubImplementationMapImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : ImplementationMap {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.IMPL_MAP)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.IMPL_MAP, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubImplementationMapImpl {
        return StubImplementationMapImpl::class.constructors.first()
            .call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getAttributes(): java.util.BitSet {
        return stub.lookupBitset(CLRMetadataType.IMPL_MAP, 0)
    }

    override fun getImportName(): kotlin.String {
        return stub.lookupString(CLRMetadataType.IMPL_MAP, 2)
    }

    override fun getMemberForwarded(): com.github.danielchemko.winmdj.core.mdspec.MemberForwarded? {
        return stub.lookupInterfaceReferent(
            CLRMetadataType.IMPL_MAP,
            1,
            com.github.danielchemko.winmdj.core.mdspec.MemberForwarded::class
        )
    }

    override fun getTargetScope(): com.github.danielchemko.winmdj.core.mdspec.ModuleReference? {
        return stub.lookupConcreteReferent(
            CLRMetadataType.IMPL_MAP,
            3,
            com.github.danielchemko.winmdj.core.mdspec.ModuleReference::class
        )
    }
}