package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.ManifestResource
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubManifestResourceImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : ManifestResource {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun toString(): String {
        return "ManifestResource/${getToken()}"
    }

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getRowNumber(): Int {
        return getStub().getRowNumber()
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.MANIFEST_RESOURCE)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.MANIFEST_RESOURCE, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubManifestResourceImpl {
        return StubManifestResourceImpl::class.constructors.first()
            .call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getAttributes(): java.util.BitSet {
        return stub.lookupBitset(CLRMetadataType.MANIFEST_RESOURCE, 0)
    }

    override fun getImplementation(): com.github.danielchemko.winmdj.core.mdspec.Implementation? {
        return stub.lookupInterfaceReferent(
            CLRMetadataType.MANIFEST_RESOURCE,
            3,
            com.github.danielchemko.winmdj.core.mdspec.Implementation::class
        )
    }

    override fun getMiscXXX(): kotlin.UInt {
        return stub.lookupTableValue(CLRMetadataType.MANIFEST_RESOURCE, 0, kotlin.UInt::class)!!
    }

    override fun getName(): kotlin.String {
        return stub.lookupString(CLRMetadataType.MANIFEST_RESOURCE, 2)
    }

    override fun getCustomAttribute(): com.github.danielchemko.winmdj.core.mdspec.CustomAttribute? {
        return getStub().computeReverseLookup(
            ManifestResource::class,
            0,
            com.github.danielchemko.winmdj.core.mdspec.CustomAttribute::class,
            false,
        ) as com.github.danielchemko.winmdj.core.mdspec.CustomAttribute?
    }
}