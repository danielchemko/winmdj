            package com.github.danielchemko.winmdj.core.autoobject.stubs
            
            
            import com.github.danielchemko.winmdj.core.MdObjectMapper
            import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
            import com.github.danielchemko.winmdj.core.autoobject.model.CLRMetadataType
            import com.github.danielchemko.winmdj.core.mdspec.*
            import com.github.danielchemko.winmdj.parser.WinMdNavigator
            import javax.annotation.processing.Generated
            
            /**
             * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
             */
            
            @Generated
            class StubTypeDefinitionImpl (
                objectMapper: MdObjectMapper,
                navigator: WinMdNavigator,
                index: Int
            ) : TypeDefinition {

                val stub = BaseWinMdStub(objectMapper, navigator, index)
                
                override fun getStub(): WinMdStub {
                    return stub                   
                }

                override fun getToken(): UInt {
                   return stub.getToken(CLRMetadataType.TYPE_DEF)
                }
                
                override fun getOffset(): UInt {
                   return stub.getObjectTableOffset(CLRMetadataType.TYPE_DEF, 0).toUInt()
                }
                
                override fun copy(rowNum: Int): StubTypeDefinitionImpl {
                   return StubTypeDefinitionImpl::class.constructors.first().call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
                }
       
            override fun getAttributes(): java.util.BitSet {
    return stub.lookupBitset(CLRMetadataType.TYPE_DEF, 0)
}

                            override fun getEvents(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Event> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.Event::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.EVENT)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.EVENT, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getFields(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Field> {
                                val column = 
return stub.lookupList(CLRMetadataType.TYPE_DEF, 4, 2, 2, com.github.danielchemko.winmdj.core.mdspec.Field::class)
                            }

                            override fun getInterfaceImpl(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.INTERFACE_IMPL)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.INTERFACE_IMPL, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getMethodImplementations(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodImplementation> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.MethodImplementation::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.METHOD_IMPL)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.METHOD_IMPL, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getMethods(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodDefinition> {
                                val column = 
return stub.lookupList(CLRMetadataType.TYPE_DEF, 5, 4, 2, com.github.danielchemko.winmdj.core.mdspec.MethodDefinition::class)
                            }

override fun getName(): kotlin.String {
    return stub.lookupString(CLRMetadataType.TYPE_DEF, 1)
}

override fun getNamespace(): kotlin.String {
    return stub.lookupString(CLRMetadataType.TYPE_DEF, 2)
}

override fun getParent(): com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef? {
    return stub.lookupInterfaceReferent(CLRMetadataType.TYPE_DEF, 3, com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef::class)
}

                            override fun getPropertyMaps(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.PropertyMap> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.PropertyMap::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.PROPERTY_MAP)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.PROPERTY_MAP, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getSubclasses(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.TypeDefinition> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.TypeDefinition::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.TYPE_DEF)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.TYPE_DEF, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getGenericParameters(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.GenericParameter> {
                                val selfToken = getStub().getRowNumber()
val foreignCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.GenericParameter::class.java)

val max = getStub().getNavigator().getCount(CLRMetadataType.GENERIC_PARAM)
return (1 .. max)
   .filter {row-> getStub().getRandomObjectTableValue(CLRMetadataType.GENERIC_PARAM, row, 0) == selfToken }
   .map{row->foreignCursor.get(row)}.toList()
                            }

                            override fun getSecurityAttribute(): com.github.danielchemko.winmdj.core.mdspec.SecurityAttribute? {
                                val stubsCursor = getStub().getObjectMapper().getCursor(com.github.danielchemko.winmdj.core.mdspec.TypeDefinition::class.java)
var rowRef = getStub().getRowNumber() - 1;
var highestMethod: com.github.danielchemko.winmdj.core.mdspec.TypeDefinition = this
return getStub().getReverseReferentSingle(CLRMetadataType.DECL_SECURITY, -1, com.github.danielchemko.winmdj.core.mdspec.SecurityAttribute::class, highestMethod.getToken())
                            }
            }