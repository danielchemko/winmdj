            package com.github.danielchemko.winmdj.core.autoobject.stubs
            
            
            import com.github.danielchemko.winmdj.core.MdObjectMapper
            import com.github.danielchemko.winmdj.core.autoobject.WinMdStub
            import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
            import com.github.danielchemko.winmdj.core.mdspec.*
            import com.github.danielchemko.winmdj.parser.WinMdNavigator
            import javax.annotation.processing.Generated
            
            /**
             * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
             */
            
            @Generated
            class StubTypeDefinitionImpl (
                objectMapper: MdObjectMapper,
                navigator: WinMdNavigator,
                index: Int
            ) : TypeDefinition {

                private val stub = WinMdStub(objectMapper, navigator, index)
                
                override fun toString(): String {
                   return "TypeDefinition/${getToken()}"
                }
                
                override fun getStub(): WinMdStub {
                    return stub                   
                }
                
                override fun getRowNumber(): Int {
                    return getStub().getRowNumber()
                }

                override fun getToken(): UInt {
                   return stub.getToken(CLRMetadataType.TYPE_DEF)
                }
                
                override fun getOffset(): UInt {
                   return stub.getObjectTableOffset(CLRMetadataType.TYPE_DEF, 0).toUInt()
                }
                
                override fun copy(rowNum: Int?): StubTypeDefinitionImpl {
                   return StubTypeDefinitionImpl::class.constructors.first().call(stub.getObjectMapper(), stub.getNavigator(), rowNum ?: getRowNumber())
                }
       
            override fun getAttributes(): java.util.BitSet {
    return stub.lookupBitset(CLRMetadataType.TYPE_DEF, 0)
}

override fun getExtends(): com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef? {
    return stub.lookupInterfaceReferent(CLRMetadataType.TYPE_DEF, 3, com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef::class)
}

                            override fun getFields(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Field> {
                                val column = 
return stub.lookupList(CLRMetadataType.TYPE_DEF, 4, 4, 3, com.github.danielchemko.winmdj.core.mdspec.Field::class)
                            }

                            override fun getInterfaceDecl(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    1,
    com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation>
                            }

                            override fun getInterfaceImpl(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    0,
    com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.InterfaceImplementation>
                            }

                            override fun getMethodBody(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodImplementation> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    1,
    com.github.danielchemko.winmdj.core.mdspec.MethodImplementation::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodImplementation>
                            }

                            override fun getMethodDeclaration(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodImplementation> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    2,
    com.github.danielchemko.winmdj.core.mdspec.MethodImplementation::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodImplementation>
                            }

                            override fun getMethods(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.MethodDefinition> {
                                val column = 
return stub.lookupList(CLRMetadataType.TYPE_DEF, 5, 4, 3, com.github.danielchemko.winmdj.core.mdspec.MethodDefinition::class)
                            }

override fun getName(): kotlin.String {
    return stub.lookupString(CLRMetadataType.TYPE_DEF, 1)
}

override fun getNamespace(): kotlin.String {
    return stub.lookupString(CLRMetadataType.TYPE_DEF, 2)
}

                            override fun getPropertyMaps(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.PropertyMap> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    0,
    com.github.danielchemko.winmdj.core.mdspec.PropertyMap::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.PropertyMap>
                            }

                            override fun getCustomAttribute(): com.github.danielchemko.winmdj.core.mdspec.CustomAttribute? {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    0,
    com.github.danielchemko.winmdj.core.mdspec.CustomAttribute::class,
    false,
) as com.github.danielchemko.winmdj.core.mdspec.CustomAttribute?
                            }

                            override fun getEvents(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Event> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    2,
    com.github.danielchemko.winmdj.core.mdspec.Event::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Event>
                            }

                            override fun getGenericParameters(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.GenericParameter> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    2,
    com.github.danielchemko.winmdj.core.mdspec.GenericParameter::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.GenericParameter>
                            }

                            override fun getMemberReference(): com.github.danielchemko.winmdj.core.mdspec.MemberReference? {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    0,
    com.github.danielchemko.winmdj.core.mdspec.MemberReference::class,
    false,
) as com.github.danielchemko.winmdj.core.mdspec.MemberReference?
                            }

                            override fun getSecurityAttribute(): com.github.danielchemko.winmdj.core.mdspec.SecurityAttribute? {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    1,
    com.github.danielchemko.winmdj.core.mdspec.SecurityAttribute::class,
    false,
) as com.github.danielchemko.winmdj.core.mdspec.SecurityAttribute?
                            }

                            override fun getSubTypes(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.TypeDefinition> {
                                return getStub().computeReverseLookup(
    TypeDefinition::class,
    3,
    com.github.danielchemko.winmdj.core.mdspec.TypeDefinition::class,
    true,
)!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.TypeDefinition>
                            }
            }