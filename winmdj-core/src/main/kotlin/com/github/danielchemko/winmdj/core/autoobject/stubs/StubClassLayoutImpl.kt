package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.ClassLayout
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubClassLayoutImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : ClassLayout {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun toString(): String {
        return "ClassLayout/${getToken()}"
    }

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getRowNumber(): Int {
        return getStub().getRowNumber()
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.CLASS_LAYOUT)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.CLASS_LAYOUT, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubClassLayoutImpl {
        return StubClassLayoutImpl::class.constructors.first().call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getClassSize(): kotlin.UInt {
        return stub.lookupTableValue(CLRMetadataType.CLASS_LAYOUT, 1, kotlin.UInt::class)!!
    }

    override fun getPackingSize(): kotlin.UShort {
        return stub.lookupTableValue(CLRMetadataType.CLASS_LAYOUT, 0, kotlin.UShort::class)!!
    }

    override fun getParent(): com.github.danielchemko.winmdj.core.mdspec.TypeDefinition? {
        return stub.lookupConcreteReferent(
            CLRMetadataType.CLASS_LAYOUT,
            2,
            com.github.danielchemko.winmdj.core.mdspec.TypeDefinition::class
        )
    }
}