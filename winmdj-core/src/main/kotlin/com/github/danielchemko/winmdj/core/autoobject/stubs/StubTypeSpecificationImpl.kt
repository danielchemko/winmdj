package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.TypeSpecification
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubTypeSpecificationImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : TypeSpecification {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.TYPE_SPEC)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.TYPE_SPEC, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubTypeSpecificationImpl {
        return StubTypeSpecificationImpl::class.constructors.first()
            .call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getSignatureRaw(): kotlin.ByteArray {
        return stub.lookupBlob(CLRMetadataType.TYPE_SPEC, 0)
    }

    override fun getCustomAttribute(): com.github.danielchemko.winmdj.core.mdspec.CustomAttribute? {
        return getStub().computeReverseLookup(
            CLRMetadataType.TYPE_SPEC,
            TypeSpecification::class,
            0,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.CustomAttribute::class,
            false,
        ) as com.github.danielchemko.winmdj.core.mdspec.CustomAttribute?
    }

    override fun getEvents(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Event> {
        return getStub().computeReverseLookup(
            CLRMetadataType.TYPE_SPEC,
            TypeSpecification::class,
            2,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.Event::class,
            true,
        )!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.Event>
    }

    override fun getMemberReference(): com.github.danielchemko.winmdj.core.mdspec.MemberReference? {
        return getStub().computeReverseLookup(
            CLRMetadataType.TYPE_SPEC,
            TypeSpecification::class,
            0,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.MemberReference::class,
            false,
        ) as com.github.danielchemko.winmdj.core.mdspec.MemberReference?
    }

    override fun getSubTypes(): kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.TypeDefinition> {
        return getStub().computeReverseLookup(
            CLRMetadataType.TYPE_SPEC,
            TypeSpecification::class,
            3,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.TypeDefinition::class,
            true,
        )!! as kotlin.collections.List<com.github.danielchemko.winmdj.core.mdspec.TypeDefinition>
    }
}