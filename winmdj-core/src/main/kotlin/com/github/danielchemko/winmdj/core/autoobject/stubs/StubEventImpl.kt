package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.autoobject.model.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.Event
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubEventImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : Event {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.EVENT)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.EVENT, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubEventImpl {
        return StubEventImpl::class.constructors.first().call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getAttributes(): java.util.BitSet {
        return stub.lookupBitset(CLRMetadataType.EVENT, 0)
    }

    override fun getName(): kotlin.String {
        return stub.lookupTableValue(CLRMetadataType.EVENT, 1, kotlin.String::class)!!
    }

    override fun getParent(): com.github.danielchemko.winmdj.core.mdspec.EventMap {
        return getStub().computeReverseLookup(
            CLRMetadataType.EVENT,
            Event::class,
            1,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.EventMap::class,
            false,
        )!! as com.github.danielchemko.winmdj.core.mdspec.EventMap
    }

    override fun getTypeDefOrRef(): com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef? {
        return stub.lookupInterfaceReferent(
            CLRMetadataType.EVENT,
            2,
            com.github.danielchemko.winmdj.core.mdspec.TypeDefOrRef::class
        )
    }

    override fun getCustomAttribute(): com.github.danielchemko.winmdj.core.mdspec.CustomAttribute? {
        return getStub().computeReverseLookup(
            CLRMetadataType.EVENT,
            Event::class,
            0,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.CustomAttribute::class,
            false,
        ) as com.github.danielchemko.winmdj.core.mdspec.CustomAttribute?
    }

    override fun getSemantics(): com.github.danielchemko.winmdj.core.mdspec.MethodSemantics? {
        return getStub().computeReverseLookup(
            CLRMetadataType.EVENT,
            Event::class,
            2,
            -1,
            0,
            com.github.danielchemko.winmdj.core.mdspec.MethodSemantics::class,
            false,
        ) as com.github.danielchemko.winmdj.core.mdspec.MethodSemantics?
    }
}