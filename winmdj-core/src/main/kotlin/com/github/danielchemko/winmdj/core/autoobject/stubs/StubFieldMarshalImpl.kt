package com.github.danielchemko.winmdj.core.autoobject.stubs


import com.github.danielchemko.winmdj.core.MdObjectMapper
import com.github.danielchemko.winmdj.core.autoobject.BaseWinMdStub
import com.github.danielchemko.winmdj.core.mdspec.CLRMetadataType
import com.github.danielchemko.winmdj.core.mdspec.FieldMarshal
import com.github.danielchemko.winmdj.core.mdspec.WinMdStub
import com.github.danielchemko.winmdj.parser.WinMdNavigator
import javax.annotation.processing.Generated

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY RegenerateSubs.kt. DO NOT EDIT IT BY HAND
 */

@Generated
class StubFieldMarshalImpl(
    objectMapper: MdObjectMapper,
    navigator: WinMdNavigator,
    index: Int
) : FieldMarshal {

    val stub = BaseWinMdStub(objectMapper, navigator, index)

    override fun toString(): String {
        return "FieldMarshal/${getToken()}"
    }

    override fun getStub(): WinMdStub {
        return stub
    }

    override fun getRowNumber(): Int {
        return getStub().getRowNumber()
    }

    override fun getToken(): UInt {
        return stub.getToken(CLRMetadataType.FIELD_MARSHAL)
    }

    override fun getOffset(): UInt {
        return stub.getObjectTableOffset(CLRMetadataType.FIELD_MARSHAL, 0).toUInt()
    }

    override fun copy(rowNum: Int): StubFieldMarshalImpl {
        return StubFieldMarshalImpl::class.constructors.first()
            .call(stub.getObjectMapper(), stub.getNavigator(), rowNum)
    }

    override fun getNativeType(): kotlin.ByteArray {
        return stub.lookupBlob(CLRMetadataType.FIELD_MARSHAL, 1)
    }

    override fun getParent(): com.github.danielchemko.winmdj.core.mdspec.HasFieldMarshal? {
        return stub.lookupInterfaceReferent(
            CLRMetadataType.FIELD_MARSHAL,
            0,
            com.github.danielchemko.winmdj.core.mdspec.HasFieldMarshal::class
        )
    }
}